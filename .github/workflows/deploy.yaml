name: Deploy Worker

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:   # ← 手動で Production へ昇格（同一コミット）
    inputs:
      sha:
        description: 'Commit SHA to promote to production'
        required: true
        type: string

permissions:
  contents: read

jobs:
  # =========================
  # STAGING (auto on push to main)
  # =========================
  deploy_staging:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: deploy-staging
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build (no sitemap in staging)
        # ※ package.json の "postbuild" に sitemap 生成を入れているなら、
        #    staging では走らせたくないので、明示的に build のみ実行
        run: pnpm --silent run build

      - name: Deploy to staging
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # wrangler.toml/json の環境名を使用（例: "staging"）
          command: deploy --env staging
          # wranglerVersion: '4.42.1'  # 固定したい場合はアンコメント

  # =========================
  # PRODUCTION (manual promote via workflow_dispatch)
  # =========================
  deploy_production:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: deploy-production
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}   # ← Staging と同一コミットを指定

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build & postbuild (Pagefind + sitemap)
        env:
          # 本番のみカノニカルURLを渡す（svelte-sitemap / Pagefind 用）
          PUBLIC_BASE_URL: https://tech-yusuke.com
        run: pnpm run build
        # ※ "postbuild": "pagefind --site .svelte-kit/cloudflare && npx svelte-sitemap --domain $PUBLIC_BASE_URL --out-dir ./.svelte-kit/cloudflare"
        #    のような postbuild が package.json にある前提

      - name: Deploy to production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
